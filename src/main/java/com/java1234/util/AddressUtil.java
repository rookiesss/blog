package com.java1234.util;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;

public class AddressUtil {

    public String getAddresses(String content, String encodingString) {
        String urlStr = "http://ip.taobao.com/service/getIpInfo.php";
        String returnStr = this.getResult(urlStr, content, encodingString);
        if (returnStr != null) {
            String[] temp = returnStr.split(",");
            System.out.println(returnStr);
            if (temp.length < 3) {
                return "未知城市";
            }
            String province = (temp[4].split(":"))[1].replaceAll("\"", "");
            province = decodeUnicode(province);// 省份
            if(province.equals("XX")||province==""){
                province="";
            }else{
                province=province+"省";
            }
            String country = (temp[2].split(":"))[1].replaceAll("\"", "");
            country = decodeUnicode(country);// 国家
            if(country.equals("XX")||country==""){
                country="";
            }
            String city = (temp[5].split(":"))[1].replaceAll("\"", "");
            city = decodeUnicode(city);// 城市
            if(city.equals("XX")||city==""||city.equals("内网IP")){
                city="";
            }else{
                city=city+"市";
            }
            String isp = (temp[7].split(":"))[1].replaceAll("\"", "");
            isp = decodeUnicode(isp);// ISP
            if(isp.equals("XX")||isp==""){
                isp="";
            }
            String str=province + city + isp;
            if(str.equals("")||str==""){
                str=country;
            }else{
                str=province + city+ " "+isp;
            }
            return str;
        }
        return "未知城市";
    }

    private String getResult(String urlStr,String content,String encoding) {
        URL url = null;
        HttpURLConnection connection = null;
        try {
            url = new URL(urlStr);
            connection = (HttpURLConnection) url.openConnection();// 新建连接实例
            connection.setConnectTimeout(2000);// 设置连接超时时间，单位毫秒
            connection.setReadTimeout(2000);// 设置读取数据超时时间，单位毫秒
            connection.setDoOutput(true);// 是否打开输出流 true|false
            connection.setDoInput(true);// 是否打开输入流true|false
            connection.setRequestMethod("POST");// 提交方法POST|GET
            connection.setUseCaches(false);// 是否缓存true|false
            connection.connect();// 打开连接端口
            DataOutputStream out = new DataOutputStream(
                    connection.getOutputStream());// 打开输出流往对端服务器写数据
            out.writeBytes(content);// 写数据,也就是提交你的表单 name=xxx&pwd=xxx
            out.flush();// 刷新
            out.close();// 关闭输出流
            BufferedReader reader = new BufferedReader(new InputStreamReader(
                    connection.getInputStream(), encoding));// 往对端写完数据对端服务器返回数据
            // ,以BufferedReader流来读取
            StringBuffer buffer = new StringBuffer();
            String line = "";
            while ((line = reader.readLine()) != null) {
                buffer.append(line);
            }
            reader.close();
            return buffer.toString();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (connection != null) {
                connection.disconnect();// 关闭连接
            }
        }
        return "";
    }

    public static String decodeUnicode(String theString) {
        char aChar;
        int len = theString.length();
        StringBuffer outBuffer = new StringBuffer(len);
        for (int x = 0; x < len;) {
            aChar = theString.charAt(x++);
            if (aChar == '\\') {
                aChar = theString.charAt(x++);
                if (aChar == 'u') {
                    int value = 0;
                    for (int i = 0; i < 4; i++) {
                        aChar = theString.charAt(x++);
                        switch (aChar) {
                            case '0':
                            case '1':
                            case '2':
                            case '3':
                            case '4':
                            case '5':
                            case '6':
                            case '7':
                            case '8':
                            case '9':
                                value = (value << 4) + aChar - '0';
                                break;
                            case 'a':
                            case 'b':
                            case 'c':
                            case 'd':
                            case 'e':
                            case 'f':
                                value = (value << 4) + 10 + aChar - 'a';
                                break;
                            case 'A':
                            case 'B':
                            case 'C':
                            case 'D':
                            case 'E':
                            case 'F':
                                value = (value << 4) + 10 + aChar - 'A';
                                break;
                            default:
                                throw new IllegalArgumentException(
                                        "Malformed      encoding.");
                        }
                    }
                    outBuffer.append((char) value);
                } else {
                    if (aChar == 't') {
                        aChar = '\t';
                    } else if (aChar == 'r') {
                        aChar = '\r';
                    } else if (aChar == 'n') {
                        aChar = '\n';
                    } else if (aChar == 'f') {
                        aChar = '\f';
                    }
                    outBuffer.append(aChar);
                }
            } else {
                outBuffer.append(aChar);
            }
        }
        return outBuffer.toString();
    }
//    public static void main(String[] args) {
//        AddressUtil addressUtils = new AddressUtil();
//        // 测试ip 219.136.134.157 中国=华南=广东省=广州市=越秀区=电信
//        String ip = "116.255.132.11";
//        String address = "";
//        try {
//            address = addressUtils.getAddresses("ip="+ip, "utf-8");
//        } catch (Exception e) {
//            // TODO Auto-generated catch block
//            e.printStackTrace();
//        }
//        System.out.println(address);
//        // 输出结果为：广东省,广州市,越秀区
//    }越秀区
}
